<?php

namespace Database\Seeders;

use App\Models\Project;
use App\Models\Status;
use App\Models\Task;
use App\Models\TaskSize;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;

class TasksSeeder extends Seeder
{
    public function run(): void
    {
        $this->command->info('üìù –°–æ–∑–¥–∞—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏...');

        // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è —Å–≤—è–∑–µ–π
        $statuses = Status::pluck('id', 'slug');
        $sizes = TaskSize::pluck('id', 'code');
        $projects = Project::pluck('id', 'slug');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å
        if ($statuses->isEmpty() || $sizes->isEmpty() || $projects->isEmpty()) {
            $this->command->warn('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ (—Å—Ç–∞—Ç—É—Å—ã, —Ä–∞–∑–º–µ—Ä—ã –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç—ã). –ü—Ä–æ–ø—É—Å–∫–∞—é —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á.');
            return;
        }

        $tasks = [
            [
                'name' => '–ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –≤ —Ñ–æ—Ä–º–µ –ª–æ–≥–∏–Ω–∞',
                'description' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥—É—Ç –≤–æ–π—Ç–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏',
                'priority' => 'high',
                'size_id' => $sizes['S'] ?? null,
                'estimated_hours' => 2,
                'status_id' => $statuses['new'] ?? $statuses->first(),
                'project_id' => $projects['task-management-system'] ?? $projects->first(),
                'start_date' => now(),
                'due_date' => now()->addDays(1),
            ],
            [
                'name' => '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∑–∞–¥–∞—á –ø–æ —Ä–∞–∑–º–µ—Ä—É',
                'description' => '–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ —Ä–∞–∑–º–µ—Ä—É –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ',
                'priority' => 'normal',
                'size_id' => $sizes['M'] ?? null,
                'estimated_hours' => 6,
                'status_id' => $statuses['in_progress'] ?? $statuses->first(),
                'project_id' => $projects['task-management-system'] ?? $projects->first(),
                'start_date' => now()->subDays(2),
                'due_date' => now()->addDays(3),
                'actual_hours' => 3.5,
            ],
            [
                'name' => '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Slack –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
                'description' => '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞–¥–∞—á–∞—Ö –≤ Slack –∫–∞–Ω–∞–ª—ã',
                'priority' => 'normal',
                'size_id' => $sizes['L'] ?? null,
                'estimated_hours' => 12,
                'status_id' => $statuses['assigned'] ?? $statuses->first(),
                'project_id' => $projects['api-integrations'] ?? $projects->first(),
                'start_date' => now()->addDays(1),
                'due_date' => now()->addWeek(),
            ],
            [
                'name' => '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
                'description' => '–ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à—É—é —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–µ–∫',
                'priority' => 'low',
                'size_id' => $sizes['XL'] ?? null,
                'estimated_hours' => 30,
                'status_id' => $statuses['new'] ?? $statuses->first(),
                'project_id' => $projects['legacy-refactoring'] ?? $projects->first(),
                'start_date' => now()->addWeeks(2),
                'due_date' => now()->addMonth(),
            ],
            [
                'name' => '–û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API',
                'description' => '–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π',
                'priority' => 'normal',
                'size_id' => $sizes['XS'] ?? null,
                'estimated_hours' => 0.5,
                'status_id' => $statuses['done'] ?? $statuses->first(),
                'project_id' => $projects['api-integrations'] ?? $projects->first(),
                'start_date' => now()->subDays(3),
                'due_date' => now()->subDays(2),
                'completed_date' => now()->subDays(1),
                'actual_hours' => 0.75,
            ],
        ];

        $created = 0;
        $updated = 0;

        foreach ($tasks as $taskData) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID 1
            $userId = \App\Models\User::where('id', 1)->exists() ? 1 : null;

            if ($userId) {
                $taskData['created_by'] = $userId;
                $taskData['updated_by'] = $userId;
            }

            $task = Task::updateOrCreate(
                [
                    'name' => $taskData['name'],
                    'project_id' => $taskData['project_id']
                ], // –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ + –ø—Ä–æ–µ–∫—Ç
                $taskData // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è/—Å–æ–∑–¥–∞–Ω–∏—è
            );

            if ($task->wasRecentlyCreated) {
                $created++;
            } else {
                $updated++;
            }
        }

        $this->command->info("‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏: —Å–æ–∑–¥–∞–Ω–æ {$created}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ {$updated}");
    }
}