<?php

namespace Database\Seeders;

use App\Models\Project;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Str;

class ProjectsSeeder extends Seeder
{
    public function run(): void
    {
        $this->command->info('üìÇ –°–æ–∑–¥–∞—é –ø—Ä–æ–µ–∫—Ç—ã...');

        $projects = [
            [
                'name' => '–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏',
                'slug' => 'task-management-system',
                'description' => '–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã',
            ],
            [
                'name' => '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                'slug' => 'mobile-app',
                'description' => '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è iOS –∏ Android',
            ],
            [
                'name' => 'API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
                'slug' => 'api-integrations',
                'description' => '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ –∏ API',
            ],
            [
                'name' => '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ legacy –∫–æ–¥–∞',
                'slug' => 'legacy-refactoring',
                'description' => '–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ –∫–æ–¥–∞',
            ],
        ];

        $created = 0;
        $updated = 0;

        foreach ($projects as $projectData) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID 1, –µ—Å–ª–∏ –Ω–µ—Ç - –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º created_by
            $userId = \App\Models\User::where('id', 1)->exists() ? 1 : null;

            if ($userId) {
                $projectData['created_by'] = $userId;
                $projectData['updated_by'] = $userId;
            }

            $project = Project::updateOrCreate(
                ['slug' => $projectData['slug']], // –ü–æ–∏—Å–∫ –ø–æ slug
                $projectData // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è/—Å–æ–∑–¥–∞–Ω–∏—è
            );

            if ($project->wasRecentlyCreated) {
                $created++;
            } else {
                $updated++;
            }
        }

        $this->command->info("‚úÖ –ü—Ä–æ–µ–∫—Ç—ã: —Å–æ–∑–¥–∞–Ω–æ {$created}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ {$updated}");
    }
}